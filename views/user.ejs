<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User</title>
    <link rel="stylesheet" href="stylesheets/form.css" />
    <link rel="stylesheet" href="stylesheets/table.css" />
    <link rel="stylesheet" href="stylesheets/style.css" />
    <script>
        let userId;
        let userData;
        let token;

        function getCookie(name) {
            const cookieValue = document.cookie
                .split('; ')
                .find(row => row.startsWith(name))
                ?.split('=')[1];
            return cookieValue ? decodeURIComponent(cookieValue) : null;
        }
        $(document).ready(function () {
            token = getCookie('token')
            if (!token) {
                window.location.href = "/";
            }

            getUser();

            $('#confirmDelete').on('click', function () {
                deleteUser(userId);
            });

            $('#confirmEditButton').on('click', function () {
                editUser(userId);
                $('input[name="email"]').val('');
                $('input[name="userName"]').val('');
                $('input[name="password"]').val('');
            });

            $('#confirmAddButton').on('click', function () {
                createUser();
                $('input[name="addEmail"]').val('');
                $('input[name="addUserName"]').val('');
                $('input[name="addPassword"]').val('');
            });

            const toastTrigger = document.getElementById('liveToastBtn')
            const toastLiveExample = document.getElementById('liveToast')
            if (toastTrigger) {
                toastTrigger.addEventListener('click', () => {
                    const toast = new bootstrap.Toast(toastLiveExample)

                    toast.show()
                })
            }
        })
        function deleteUserId(id) {
            userId = id;
        }

        function editUserData(id) {
            userId = id;
            let user = userData.find((user) => user._id == id)
            $('input[name="email"]').val(user?.email);
            $('input[name="userName"]').val(user?.userName);
        }

        function getUser() {
            $.ajax({
                url: '/users/getUsers',
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                success: function (response) {
                    if (response.isSuccess) {
                        const users = response.users;
                        let userHtml = '';
                        userData = response.users;
                        users.forEach(user => {
                            userHtml += `<tr>
                                            <td>${user?.userName || '-'}</td>
                                            <td>${user.email}</td>
                                            <td>${user.role}</td>
                                            <td>
                                                <div class=''>
                                                    <button onclick="editUserData('${user._id}')" data-bs-toggle="modal" data-bs-target="#editModal" class='btn edit-btn'>Edit</button>
                                                    <button onclick="deleteUserId('${user._id}')" data-bs-toggle="modal" data-bs-target="#deleteModal" class='btn delete-btn'>Delete</button>
                                                </div>
                                            </td>
                                         </tr>`;
                        });
                        $('#user tbody').html(userHtml);
                        $('#loadingSpinner').hide()
                    }
                },
                error: function (error) {
                    if (error.status == 401) {
                        window.location.href = "/";
                        showToast('errorToast', 'UnAuthorize.Please Login to continue');
                    }
                    console.error('Error fetching users:', error);
                    $('#loadingSpinner').hide()
                    showToast('errorToast', 'Error fetching users: ' + error.responseJSON.message);
                }
            });
        }
        function editUser(userId) {
            const editedEmail = document.querySelector('input[name="email"]').value;
            const editedUserName = document.querySelector('input[name="userName"]').value;
            const editedUserNames = $('input[name="userName"]').val()

            if (editedEmail) {
                $.ajax({
                    url: `/users/updateUser/${userId}`,
                    method: 'PUT',
                    contentType: 'application/json',
                    headers: {
                        'Authorization': `Bearer ${token}`
                    },
                    data: JSON.stringify({ email: editedEmail, userName: editedUserName }),
                    success: function (response) {
                        if (response.isSuccess) {
                            $('#loadingSpinner').hide()
                            showToast('successToast', response.message);
                            getUser();
                            $('#editModal').modal('hide');
                        }
                    },
                    error: function (error) {
                        $('#loadingSpinner').hide()
                        $('#editModal').modal('hide');
                        showToast('errorToast', 'Error in Deleting user: ' + error.responseJSON.message);
                        console.error('Error updating user:', error);
                    }
                });
            }
        }

        function deleteUser(userId) {
            // Implement delete user functionality
            $.ajax({
                url: `/users/deleteUser/${userId}`,
                method: 'DELETE',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                success: function (response) {
                    if (response.isSuccess) {
                        $('#loadingSpinner').hide()
                        showToast('successToast', response.message);
                        getUser()
                        $('#deleteModal').modal('hide');
                    }
                },
                error: function (error) {
                    console.error('Error fetching users:', error);
                    $('#loadingSpinner').hide()
                    $('#deleteModal').modal('hide');
                    showToast('errorToast', 'Error in Deleting user: ' + error.responseJSON.message);
                }
            });
        }
        function createUser() {
            const email = $('#addEmail').val();
            const userName = $('#addUserName').val();
            const password = $('#addPassword').val();
            $('#loadingSpinner').show()

            $.ajax({
                url: `/users/createUser`,
                method: 'POST',
                contentType: 'application/json',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                data: JSON.stringify({ email, userName, password }),
                success: function (response) {
                    if (response.isSuccess) {
                        $('#loadingSpinner').hide()
                        getUser();
                        showToast('successToast', response.message);
                        $('#addModal').modal('hide');
                    }
                },
                error: function (error) {
                    $('#loadingSpinner').hide()
                    console.error('Error updating user:', error);
                    showToast('errorToast', 'Error in Creating user: ' + error.responseJSON.message);
                    $('#addModal').modal('hide');
                }

            });
        }

        function showToast(toastId, message) {
            const toastElement = $('#' + toastId);
            toastElement.find('.toast-body').text(message);
            const toast = new bootstrap.Toast(toastElement[0]);
            toast.show();
        }

    </script>
</head>

<body>
    <div class="loading" id="loadingSpinner" style="display: none;">
        <span class="typing-animation">Loading...</span>
    </div>
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div id="successToast" class="toast success-toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header d-flex justify-content-end">
                <strong class="me-auto">Success</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body" id="successToastBody">
                <!-- Success message will be inserted here -->
            </div>
        </div>

        <div id="errorToast" class="toast error-toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header d-flex justify-content-end">
                <strong class="me-auto">Error</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body" id="errorToastBody">
                <!-- Error message will be inserted here -->
            </div>
        </div>
    </div>
    <div class="d-flex justify-content-end pb-3">
        <button class="btn add-button" data-bs-toggle="modal" data-bs-target="#addModal">Add
            User</button>
    </div>
    <table class="table table-striped user-table" id="user">
        <thead class="">
            <tr>
                <th scope="col">Username</th>
                <th scope="col">Email</th>
                <th scope="col">Role</th>
                <th scope="col" colspan="2">Action</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>

    <!-- add modal -->
    <div class="modal fade" id="addModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Add User</h1>
                    <button type="button" id="close-btn" class="btn-close" data-bs-dismiss="modal"
                        aria-label="Close"></button>
                </div>
                <form id="editForm">
                    <div class="modal-body">
                        <div class="" id="edit-form">
                            <form>
                                <div class="form-row">
                                    <input type="text" name="addUserName" id="addUserName" required>
                                    <span>UserName</span>
                                </div>
                                <div class="form-row">
                                    <input type="text" id='addEmail' name="addEmail" required>
                                    <span>Email</span>
                                </div>
                                <div class="form-row">
                                    <input type="text" name="addPassword" id="addPassword" required>
                                    <span>Password</span>
                                </div>
                            </form>
                        </div>

                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">No</button>
                        <button type="button" class="btn btn-success" id="confirmAddButton">Yes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <!-- Edit Modal -->
    <div class="modal fade" id="editModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
            <div class=" modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Edit User</h1>
                    <button type="button" id="close-btn" class="btn-close" data-bs-dismiss="modal"
                        aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <div class="" id="edit-form">
                        <form>
                            <div class="form-row">
                                <input type="text" id='email' name="email" required>
                                <span>Email</span>
                            </div>
                            <div class="form-row">
                                <input type="text" name="userName" id="userName" required>
                                <span>UserName</span>
                            </div>
                        </form>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">No</button>
                    <button type="button" class="btn btn-success" id="confirmEditButton">Yes</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Modal -->
    <div class="modal fade" id="deleteModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Delete User</h1>
                    <button type="button" id="close-btn" class="btn-close" data-bs-dismiss="modal"
                        aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this user ?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">No</button>
                    <button type="button" class="btn btn-success" id="confirmDelete">Yes</button>
                </div>
            </div>
        </div>
    </div>
</body>

</html>